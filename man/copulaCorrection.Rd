% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_copulacorrection_interface.R
\name{copulaCorrection}
\alias{copulaCorrection}
\title{Fitting Linear Models Endogeneous Regressors using Gaussian Copula}
\usage{
copulaCorrection(formula, data, verbose = TRUE, ...)
}
\arguments{
\item{formula}{A symbolic description of the model to be fitted. See the "Details" section for the exact notation.}

\item{data}{A data.frame containing the data of all parts specified in the formula parameter.}

\item{verbose}{Show details about the running of the function.}

\item{...}{Arguments for the log-likelihood optimization function in the case of a single continuous endogenous
 regressor. Ignored with a warning otherwise.
\describe{
\item{start.params}{A named vector containing a set of parameters to use in the first optimization iteration.
The names have to correspond exactly to the names of the components specified in the formula parameter.
If not provided, a linear model is fitted to derive them.}
\item{num.boots}{Number of bootstrapping iterations. Defaults to 1000.}
}}
}
\value{

}
\description{
Fits linear models with continuous or discrete endogeneous regressors (or a mixture of both) using Gaussian copulas, as presented in Park and Gupta (2012).
This is a statistical technique to address the endogeneity problem where no external instrumental variables are needed.
The important assumption of the model is that the endogeneous variables should NOT be normally distributed, if continuous, preferably with a skewed distribution.
}
\details{
For the case of a single continuous endogenous regressor maximum likelihood estimation is used.
Therefore, the call of the function is: \\
\code{copulaCorrection(y ~ X1 + X2 + P | continuous(P), data, start.params, num.boots)}, \\
where the first argument is a two-part formula with the LHS representing the model to be estimated while the RHS is the endogenous regressor, whose distributional
assumption should be specified in paranthesis.
the starting values for \eqn{\rho} and \eqn{\sigma}, where \eqn{\rho} is the correlation between the endogenous regressor and the error, and \eqn{\sigma} is
the variance of the model's error.

In the case of one discrete endogenous regressor, the call of the function is:\\
\code{copulaCorrection(y ~ X1 + X2 + P | discrete(P), data)}\\
Here, an alternative model specification is used, still based on Gaussian copula, but using augmented OLS.
A note in this case: Since the marginal distribution function of the endogenous regressor is a step function in this case,
it is important to also have a look at the confidence interval of the coefficient estimates, by calling the \code{confint()} function.

In the case of multiple endogenous regressors of both discrete or continuous distributions, the call of the \code{copulaCorrection()} function is: \\
\code{copulaCorrection(y ~ X1 + X2 + P1 + P2 | discrete(P1) + continuous(P2), data)}




For the case of a single continuous.

Something about how the formula is given.

Something about the additional parameters that are used during optimization

Something about the confidence interval for discrete only
}
\examples{
data("dataCopC1")
data("dataCopC2")
data("dataCopDis")
data("dataCopDisCont")

\\notrun{
# Single continuous: log-likelihood optimization
c1 <- copulaCorrection(y~X1+X2+P|continuous(P), data=dataCopC1)
# same as above, with start.parameters and number of bootstrappings
c1 <- copulaCorrection(y~X1+X2+P|continuous(P), num.boots=500, data=dataCopC1,
                       start.params = c("(Intercept)"=1, X1=1, X2=-2, P=-1))
}

# All following examples fit linear model with Gaussian copulas

# 2 continuous endogenous regressors
c2 <- copulaCorrection(y~X1+X2+P1+P2|continuous(P1, P2), data=dataCopC2)
# same as above
c2 <- copulaCorrection(y~X1+X2+P1+P2|continuous(P1)+continuous(P2), data=dataCopC2)

# single discrete endogenous regressor
d1 <- copulaCorrection(y~X1+X2+P1+P2|discrete(P1), data=dataCopDis)
# two discrete endogenous regressor
d2 <- copulaCorrection(y~X1+X2+P1+P2|discrete(P1)+discrete(P2), data=dataCopDis)
# same as above
d2 <- copulaCorrection(y~X1+X2+P1+P2|discrete(P1, P2), data=dataCopDis)

# single discrete, single continuous
cd <- copulaCorrection(y~X1+X2+P1+P2|discrete(P1)+continuous(P2), data=dataCopDisCont)

}
\references{
Park, S. and Gupta, S., (2012), 'Handling Endogeneous Regressors by Joint Estimation Using Copulas', Marketing Science, 31(4), 567-86.
}
